version: 2

sources:
  - name: tasty_bytes
    database: tasty_bytes_dbt_db
    schema: raw
    tables:
      - name: raw_pos_order_header
        description: "Order header data from point of sale system"
        freshness:
          warn_after: {count: 6, period: hour}
          error_after: {count: 12, period: hour}
        loaded_at_field: order_ts
        columns:
          - name: order_id
            description: "Unique order identifier"
            tests:
              - not_null
              - unique
          - name: truck_id
            description: "Food truck identifier"
            tests:
              - not_null
          - name: order_ts
            description: "Order timestamp"
            tests:
              - not_null
          - name: customer_id
            description: "Customer identifier"
            tests:
              - not_null
          - name: order_amount
            description: "Total order amount before discounts"
            tests:
              - not_null
              - dbt_utils.accepted_range:
                  min_value: 0
                  max_value: 50000
                  inclusive: true
          - name: order_discount
            description: "Order discount amount"
            tests:
              - dbt_utils.accepted_range:
                  min_value: 0
                  max_value: 5000
                  inclusive: true
          - name: order_tax
            description: "Order tax amount"
            tests:
              - dbt_utils.accepted_range:
                  min_value: 0
                  max_value: 5000
                  inclusive: true
          - name: order_net_total
            description: "Final order total after discounts and tax"
            tests:
              - not_null
              - dbt_utils.accepted_range:
                  min_value: 0
                  max_value: 50000
                  inclusive: true
              - dbt_utils.expression_is_true:
                  expression: "order_net_total <= order_amount"
        
      - name: raw_pos_order_detail
        description: "Line item details for each order"
        freshness:
          warn_after: {count: 6, period: hour}
          error_after: {count: 12, period: hour}
        loaded_at_field: _fivetran_synced
        columns:
          - name: order_id
            description: "Unique order identifier"
            tests:
              - not_null
              - relationships:
                  to: ref('raw_pos_order_header')
                  field: order_id
          - name: menu_item_id
            description: "Menu item identifier"
            tests:
              - not_null
          - name: quantity
            description: "Number of items ordered"
            tests:
              - not_null
              - dbt_utils.accepted_range:
                  min_value: 1
                  max_value: 50
                  inclusive: true
          - name: price
            description: "Unit price"
            tests:
              - not_null
              - dbt_utils.accepted_range:
                  min_value: 0.01
                  max_value: 1000
                  inclusive: true
          - name: line_total
            description: "Total for this line item"
            tests:
              - not_null
              - dbt_utils.accepted_range:
                  min_value: 0.01
                  max_value: 10000
                  inclusive: true
              - dbt_utils.expression_is_true:
                  expression: "line_total = quantity * price"
                  
      - name: raw_pos_menu
        description: "Menu items and categories"
        freshness:
          warn_after: {count: 24, period: hour}
          error_after: {count: 48, period: hour}
        loaded_at_field: _fivetran_synced
        columns:
          - name: menu_item_id
            description: "Menu item identifier"
            tests:
              - not_null
              - unique
          - name: menu_type
            description: "Type of menu (e.g., Tacos, Ice Cream)"
            tests:
              - not_null
              - accepted_values:
                  values: ['Tacos', 'Ice Cream', 'Burgers', 'Pizza', 'Sandwiches', 'Salads']
          - name: truck_brand_name
            description: "Brand name of the food truck"
            tests:
              - not_null
              - accepted_values:
                  values: ['Guac n Roll', 'Freezing Point', 'The Mac Shack', 'Cheeky Greek', 'Burger Palace', 'Pizza Corner']
          - name: item_category
            description: "Category of items sold"
            tests:
              - not_null
              - accepted_values:
                  values: ['Main', 'Dessert', 'Beverages', 'Sides', 'Appetizers']
          - name: item_name
            description: "Name of the menu item"
            tests:
              - not_null
              
      - name: raw_pos_truck
        description: "Food truck metadata"
        freshness:
          warn_after: {count: 24, period: hour}
          error_after: {count: 48, period: hour}
        loaded_at_field: _fivetran_synced
        columns:
          - name: truck_id
            description: "Food truck identifier"
            tests:
              - not_null
              - unique
          - name: truck_brand_name
            description: "Brand name of the food truck"
            tests:
              - not_null
          - name: truck_name
            description: "Specific truck name"
            tests:
              - not_null
          - name: city
            description: "City where truck operates"
            tests:
              - not_null
          - name: country
            description: "Country where truck operates"
            tests:
              - not_null
          - name: latitude
            description: "Truck location latitude"
            tests:
              - dbt_utils.accepted_range:
                  min_value: -90
                  max_value: 90
                  inclusive: true
          - name: longitude
            description: "Truck location longitude"
            tests:
              - dbt_utils.accepted_range:
                  min_value: -180
                  max_value: 180
                  inclusive: true
              
      - name: raw_customer
        description: "Customer information"
        freshness:
          warn_after: {count: 24, period: hour}
          error_after: {count: 48, period: hour}
        loaded_at_field: _fivetran_synced
        columns:
          - name: customer_id
            description: "Customer identifier"
            tests:
              - not_null
              - unique
          - name: first_name
            description: "Customer first name"
            tests:
              - not_null
          - name: last_name
            description: "Customer last name"
            tests:
              - not_null
          - name: email
            description: "Customer email address"
            tests:
              - not_null
              - dbt_utils.expression_is_true:
                  expression: "email like '%@%'"
          - name: phone
            description: "Customer phone number"
          - name: city
            description: "Customer city"
            tests:
              - not_null
          - name: country
            description: "Customer country"
            tests:
              - not_null
          - name: preferred_language
            description: "Customer preferred language"
            tests:
              - accepted_values:
                  values: ['English', 'Spanish', 'French', 'German', 'Italian', 'Portuguese']
          - name: customer_segment
            description: "Customer segment classification"
            tests:
              - accepted_values:
                  values: ['Bronze', 'Silver', 'Gold', 'Platinum']
          - name: signup_date
            description: "Customer signup date"
            tests:
              - not_null
              - dbt_utils.expression_is_true:
                  expression: "signup_date <= current_date()"
